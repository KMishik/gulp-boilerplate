{"version":3,"sources":["../../<input css 2>","reset.less","dialog.less","sprite.less"],"names":[],"mappings":"AAAA;;;;;;;;;;;;EAYE;AACF;;;;;;;;;;;;;;;;;;;;;;;;EAwBE;AACF;;;;;;;;EAQE;AC9CF;;EACI,UAAA;EACA,WAAA;EACA,UAAA;CDiDH;AC9CD;EACI,+BAAA;EACA,iBAAA;EACA,gBAAA;EACA,iBAAA;EACA,YAAA;EACA,sBAAA;EACA,+BAAA;EACA,kCAAA;CDgDH;AC7CD;EACI,+BAAA;UAAA,uBAAA;CD+CH;AC5CD;;;;;;EAAwB,oBAAA;CDoDvB;AClDD;EAAQ,YAAA;EAAa,qBAAA;EAAsB,WAAA;CDuD1C;ACrDD;EAAM,UAAA;EAAW,gBAAA;CDyDhB;ACvDD;EAAQ,YAAA;EAAY,0BAAA;EAA0B,kBAAA;CD4D7C;AEtFD;EACI,gBAAA;EACA,OAAA;EACA,QAAA;EACA,UAAA;EACA,SAAA;EACA,+BAAA;EACA,cAAA;EACA,mBAAA;EACA,WAAA;EACA,uCAAA;EAAA,+BAAA;EACA,cAAA;CFwFH;AEtFG;EACI,WAAA;CFwFP;AEtGD;EAkBQ,iDAAA;EAAA,yCAAA;EAAA,iCAAA;EAAA,+DAAA;EACA,mCAAA;MAAA,+BAAA;UAAA,2BAAA;EACA,sBAAA;EACA,uBAAA;EACA,iBAAA;EACA,cAAA;EACA,uDAAA;UAAA,+CAAA;EACA,mBAAA;CFuFP;AEhHD;EA2BY,mBAAA;EACA,sBAAA;EACA,YAAA;EACA,aAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,gBAAA;EACA,uBAAA;EACA,2BAAA;UAAA,mBAAA;EACA,mBAAA;EACA,aAAA;EACA,WAAA;EACA,YAAA;EACA,sBAAA;EACA,uBAAA;EACA,YAAA;EACA,qEAAA;EAAA,6DAAA;EAAA,qDAAA;EAAA,mFAAA;CFwFX;AEvFW;EACI,mCAAA;MAAA,+BAAA;UAAA,2BAAA;EACA,WAAA;CFyFf;AEvFW;EACI,iCAAA;MAAA,6BAAA;UAAA,yBAAA;CFyFf;AErFG;EACI,WAAA;CFuFP;AExFG;EAGQ,+BAAA;MAAA,2BAAA;UAAA,uBAAA;CFwFX;AErFG;EACI,YAAA;EACA,sBAAA;EACA,aAAA;EACA,uBAAA;CFuFP;AGxCG;EACI,8CAAA;CH0CP;AGnCC;EAzCA,+BAAA;EAVA,YAAA;EAIA,aAAA;CHuFD;AGxCC;EAzCA,6BAAA;EAVA,YAAA;EAIA,aAAA;CH4FD","file":"../bundle.css","sourcesContent":["/*\nLESS variables are information about icon's compiled state, stored under its original file name\n\n.icon-home {\n  width: @icon-home-width;\n}\n\nThe large array-like variables contain all information about a single icon\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\n\nAt the bottom of this section, we provide information about the spritesheet itself\n@spritesheet: width height image @spritesheet-sprites;\n*/\n/*\nThe provided classes are intended to be used with the array-like variables\n\n.icon-home {\n  .sprite-width(@icon-home);\n}\n.icon-email {\n  .sprite(@icon-email);\n}\n\nExample usage in HTML:\n\n`display: block` sprite:\n<div class=\"icon-home\"></div>\n\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\n\n// CSS\n.icon {\n  display: inline-block;\n}\n\n// HTML\n<i class=\"icon icon-home\"></i>\n*/\n/*\nThe `.sprites` mixin generates identical output to the CSS template\n  but can be overridden inside of LESS\n\nThis must be run when you have at least 2 sprites.\n  If run with a single sprite, then there will be reference errors.\n.sprites-images();\n.sprites(@spritesheet-sprites);\n*/\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  border: 0;\n}\nbody {\n  font-family: Arial, sans-serif;\n  line-height: 1.5;\n  font-size: 14px;\n  background: #fff;\n  color: #000;\n  word-wrap: break-word;\n  -webkit-text-size-adjust: none;\n  -webkit-overflow-scrolling: touch;\n}\n* {\n  box-sizing: border-box;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n}\np img {\n  float: left;\n  margin: 0 10px 5px 0;\n  padding: 0;\n}\nimg {\n  border: 0;\n  max-width: 100%;\n}\ntable {\n  width: auto;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n.dialog-box {\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  text-align: center;\n  opacity: 0;\n  transition: opacity .3s linear;\n  display: none;\n}\n.dialog-box.active {\n  opacity: 1;\n}\n.dialog-box .dialog {\n  transition: transform .3s linear;\n  transform: scale(0.5, 0.5);\n  display: inline-block;\n  vertical-align: middle;\n  background: #fff;\n  padding: 20px;\n  box-shadow: 3px 3px 6px 1px rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n.dialog-box .dialog .closer {\n  font-family: Arial;\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  line-height: 30px;\n  text-align: center;\n  vertical-align: middle;\n  font-size: 30px;\n  border: 1px solid #ccc;\n  border-radius: 50%;\n  position: absolute;\n  right: -15px;\n  top: -15px;\n  color: #000;\n  text-decoration: none;\n  background-color: #fff;\n  opacity: .8;\n  transition: opacity .3s linear, transform .3s linear;\n}\n.dialog-box .dialog .closer:hover {\n  transform: scale(1.1, 1.1);\n  opacity: 1;\n}\n.dialog-box .dialog .closer:active {\n  transform: rotate(30deg);\n}\n.dialog-box.active {\n  opacity: 1;\n}\n.dialog-box.active .dialog {\n  transform: scale(1, 1);\n}\n.dialog-box:before {\n  content: '';\n  display: inline-block;\n  height: 100%;\n  vertical-align: middle;\n}\n.castle,.logo {\n  background-image: url('../images/sprite.png');\n}\n.castle {\n  background-position: 0px -30px;\n  width: 24px;\n  height: 24px;\n}\n.logo {\n  background-position: 0px 0px;\n  width: 60px;\n  height: 30px;\n}\n","html, body {\r\n    margin: 0;\r\n    padding: 0; \r\n    border: 0;\r\n}\r\n\r\nbody {\r\n    font-family:Arial,  sans-serif;\r\n    line-height:1.5;\r\n    font-size: @fontsize;\r\n    background: @color-white;\r\n    color: @color-text;\r\n    word-wrap: break-word;\r\n    -webkit-text-size-adjust: none;\r\n    -webkit-overflow-scrolling: touch;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nh1, h2, h3, h4, h5, h6{ font-weight: normal; }\r\n\r\np img { float: left; margin: 0 10px 5px 0; padding: 0; }\r\n\r\nimg { border: 0; max-width: 100%; }\r\n\r\ntable { width:auto; border-collapse: collapse;border-spacing: 0; }\r\n","@close-button-size: 30px;\r\n.dialog-box{\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    z-index:1000;\r\n    text-align: center;\r\n    opacity: 0;\r\n    transition: opacity .3s linear;\r\n    display: none;\r\n\r\n    &.active {\r\n        opacity: 1;\r\n    }\r\n\r\n    .dialog {\r\n        transition: transform .3s linear;\r\n        transform: scale(0.5, 0.5);\r\n        display: inline-block;\r\n        vertical-align: middle;\r\n        background: #fff;\r\n        padding: 20px;\r\n        box-shadow: 3px 3px 6px 1px rgba(0, 0, 0, 0.1);\r\n        position: relative;\r\n        .closer {\r\n            font-family: Arial;\r\n            display: inline-block;\r\n            width: @close-button-size;\r\n            height: @close-button-size;\r\n            line-height: @close-button-size;\r\n            text-align: center;\r\n            vertical-align: middle;\r\n            font-size: @close-button-size;\r\n            border:1px solid #ccc;\r\n            border-radius: 50%;\r\n            position:absolute;\r\n            right:-@close-button-size/2;\r\n            top:-@close-button-size/2;\r\n            color: #000;\r\n            text-decoration: none;\r\n            background-color: #fff;\r\n            opacity: .8;\r\n            transition: opacity .3s linear, transform .3s linear;\r\n            &:hover {\r\n                transform: scale(1.1, 1.1);\r\n                opacity: 1;\r\n            }\r\n            &:active {\r\n                transform: rotate(30deg);\r\n            }\r\n        }\r\n    }\r\n    &.active {\r\n        opacity: 1;\r\n        .dialog {\r\n            transform: scale(1,1);\r\n        }\r\n    }\r\n    &:before {\r\n        content: '';\r\n        display: inline-block;\r\n        height: 100%;\r\n        vertical-align: middle;\r\n    }\r\n}","/*\r\nLESS variables are information about icon's compiled state, stored under its original file name\r\n\r\n.icon-home {\r\n  width: @icon-home-width;\r\n}\r\n\r\nThe large array-like variables contain all information about a single icon\r\n@icon-home: x y offset_x offset_y width height total_width total_height image_path name;\r\n\r\nAt the bottom of this section, we provide information about the spritesheet itself\r\n@spritesheet: width height image @spritesheet-sprites;\r\n*/\r\n@castle-name: 'castle';\r\n@castle-x: 0px;\r\n@castle-y: 30px;\r\n@castle-offset-x: 0px;\r\n@castle-offset-y: -30px;\r\n@castle-width: 24px;\r\n@castle-height: 24px;\r\n@castle-total-width: 60px;\r\n@castle-total-height: 54px;\r\n@castle-image: '../images/sprite.png';\r\n@castle: 0px 30px 0px -30px 24px 24px 60px 54px '../images/sprite.png' 'castle';\r\n@logo-name: 'logo';\r\n@logo-x: 0px;\r\n@logo-y: 0px;\r\n@logo-offset-x: 0px;\r\n@logo-offset-y: 0px;\r\n@logo-width: 60px;\r\n@logo-height: 30px;\r\n@logo-total-width: 60px;\r\n@logo-total-height: 54px;\r\n@logo-image: '../images/sprite.png';\r\n@logo: 0px 0px 0px 0px 60px 30px 60px 54px '../images/sprite.png' 'logo';\r\n@sprite_names:  'castle' 'logo';\r\n@sprites_image: '../images/sprite.png' '../images/sprite.png';\r\n@spritesheet-width: 60px;\r\n@spritesheet-height: 54px;\r\n@spritesheet-image: '../images/sprite.png';\r\n@spritesheet-sprites: @castle @logo;\r\n@spritesheet: 60px 54px '../images/sprite.png' @spritesheet-sprites;\r\n\r\n/*\r\nThe provided classes are intended to be used with the array-like variables\r\n\r\n.icon-home {\r\n  .sprite-width(@icon-home);\r\n}\r\n.icon-email {\r\n  .sprite(@icon-email);\r\n}\r\n\r\nExample usage in HTML:\r\n\r\n`display: block` sprite:\r\n<div class=\"icon-home\"></div>\r\n\r\nTo change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:\r\n\r\n// CSS\r\n.icon {\r\n  display: inline-block;\r\n}\r\n\r\n// HTML\r\n<i class=\"icon icon-home\"></i>\r\n*/\r\n.sprite-width(@sprite) {\r\n  width: extract(@sprite, 5);\r\n}\r\n\r\n.sprite-height(@sprite) {\r\n  height: extract(@sprite, 6);\r\n}\r\n\r\n.sprite-position(@sprite) {\r\n  @sprite-offset-x: extract(@sprite, 3);\r\n  @sprite-offset-y: extract(@sprite, 4);\r\n  background-position: @sprite-offset-x @sprite-offset-y;\r\n}\r\n\r\n.sprite-image(@sprite) {\r\n  @sprite-image: extract(@sprite, 9);\r\n  @sprite-image-bare: ~`\"@{sprite-image}\".slice(1, -1)`;\r\n  background-image: url(@sprite-image-bare);\r\n}\r\n\r\n.sprite-positions(@sprite) {\r\n  .sprite-position(@sprite);\r\n  .sprite-width(@sprite);\r\n  .sprite-height(@sprite);\r\n}\r\n\r\n.sprite(@sprite) {\r\n  .sprite-image(@sprite);\r\n  .sprite-position(@sprite);\r\n  .sprite-width(@sprite);\r\n  .sprite-height(@sprite);\r\n}\r\n\r\n/*\r\nThe `.sprites` mixin generates identical output to the CSS template\r\n  but can be overridden inside of LESS\r\n\r\nThis must be run when you have at least 2 sprites.\r\n  If run with a single sprite, then there will be reference errors.\r\n.sprites-images();\r\n.sprites(@spritesheet-sprites);\r\n*/\r\n.sprites-images() {\r\n    @joined_sprite_names: ~`@{sprite_names}.join(',.')`;\r\n    .@{joined_sprite_names} {\r\n        background-image: url('../images/sprite.png');\r\n    };\r\n}\r\n\r\n.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {\r\n  @sprite: extract(@sprites, @i);\r\n  @sprite-name: e(extract(@sprite, 10));\r\n  .@{sprite-name} {\r\n    .sprite-positions(@sprite);\r\n  }\r\n  .sprites(@sprites, @i + 1);\r\n}\r\n"]}